WITH CTE_UNION AS (
SELECT *
, SPLIT_PART('TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_01','_',6) AS TABLE_MONTH
FROM TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_01

UNION ALL

SELECT *
, SPLIT_PART('TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_02','_',6) AS TABLE_MONTH
FROM TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_02

UNION ALL

SELECT *
, SPLIT_PART('TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_03','_',6) AS TABLE_MONTH
FROM TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_03

UNION ALL

SELECT *
, SPLIT_PART('TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_04','_',6) AS TABLE_MONTH
FROM TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_04

UNION ALL

SELECT *
, SPLIT_PART('TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_05','_',6) AS TABLE_MONTH
FROM TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_05

UNION ALL

SELECT *
, SPLIT_PART('TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_06','_',6) AS TABLE_MONTH
FROM TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_06

UNION ALL

SELECT *
, SPLIT_PART('TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_07','_',6) AS TABLE_MONTH
FROM TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_07

UNION ALL

SELECT *
, SPLIT_PART('TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_08','_',6) AS TABLE_MONTH
FROM TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_08

UNION ALL

SELECT *
, SPLIT_PART('TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_09','_',6) AS TABLE_MONTH
FROM TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_09

UNION ALL

SELECT *
, SPLIT_PART('TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_10','_',6) AS TABLE_MONTH
FROM TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_10

UNION ALL

SELECT *
, SPLIT_PART('TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_11','_',6) AS TABLE_MONTH
FROM TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_11

UNION ALL

SELECT *
, SPLIT_PART('TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_12','_',6) AS TABLE_MONTH
FROM TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2023_WK08_12
)


,CTE_TRANSFORM AS(
SELECT ID
,FIRST_NAME
,LAST_NAME
,TICKER
,SECTOR
,MARKET
,STOCK_NAME
,REPLACE(REPLACE(REPLACE(MARKET_CAP,'M',''),'B',''),'$','') AS MARKET_CAP
,PURCHASE_PRICE
,DATE_FROM_PARTS(2023, TABLE_MONTH, 1) AS FILE_DATE
,(CASE
WHEN CONTAINS(MARKET_CAP,'M') THEN 1000000
WHEN CONTAINS(MARKET_CAP, 'B') THEN 1000000000
ELSE 1
END) AS MULTIPLY
FROM CTE_UNION
WHERE MARKET_CAP !='n/a'
)

,CTE_FINISHED AS (
SELECT ID
,FIRST_NAME
,LAST_NAME
,TICKER
,SECTOR
,MARKET
,STOCK_NAME
,FILE_DATE
,(MARKET_CAP::FLOAT)*MULTIPLY AS MARKET_CAP
,REPLACE(PURCHASE_PRICE,'$','')::FLOAT AS PURCHASE_PRICE
FROM CTE_TRANSFORM
)

, CTE_GROUPINGS AS(
SELECT *
,(CASE
WHEN PURCHASE_PRICE>=75000 THEN 'VERY HIGH'
WHEN PURCHASE_PRICE>=50000 THEN 'HIGH'
WHEN PURCHASE_PRICE>=25000 THEN 'MEDIUM'
WHEN PURCHASE_PRICE>=0 THEN 'LOW'
ELSE 'HIGHEST'
END) AS PURCHASE_PRICE_CATEGORY
, (CASE
WHEN MARKET_CAP>=100000000000 THEN 'HUGE'
WHEN MARKET_CAP>=1000000000 THEN 'LARGE'
WHEN MARKET_CAP>=100000000 THEN 'MEDIUM'
ELSE 'LOW'
END) AS MARKET_CAP_CATEGORY
FROM CTE_FINISHED
)

,CTE_RANK AS(
SELECT *
,RANK() OVER (PARTITION BY FILE_DATE,PURCHASE_PRICE_CATEGORY, MARKET_CAP_CATEGORY ORDER BY PURCHASE_PRICE DESC) AS RNK
FROM CTE_GROUPINGS
)

SELECT *
FROM CTE_RANK
WHERE RNK<6
